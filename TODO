1. Make advantage of using .data() method to convert vectors to C arrays
2. Static resampling
3. Organise fit functions into gsr/gsl categories (only gsl?)
4. Check that dx/dy artifact has really disappeared (no)
5. Implement several fitting functions, seems like there isn't any universal one (exp + polyexp)

Combination of models:
1. Do some test GSRs to determine event time boundaries for GSR
2. Do GSR with optimized time boundaries
2.1. Determine flux rope invariant axis orientation
2.2. Determine flux rope time boundaries
3. Do flux rope fitting modeling with axis direction and time boundaries from previous step (Hidalgo eliptical model)
3.1. Determine impact parameter
4. Do GSR with invariant axis, time boundaries and impact parameter determined from previous steps

1. Do not call virtual methods from constructors and destructors
2. Name hiding - polymorphic methods start from scratch, solution: using Base::method

1. Plotting
1.1. Residual maps
1.1.1. Original residual map
1.1.2. Optimized residual map
1.2. Magnetic field maps
1.2.1. Bz magnetic field map
1.2.2. |B| magnetic field map
1.3. Optimized axis plots
1.3.1. Pt(A) full + running average plot
1.3.2. Pt(A) fitted plot
1.3.3. dPt/dA(A) plot (derivative from fitted Pt(A))
1.3.4. Bz(A) original + fitted plot
1.4. Data plot (stacked)
2. Targeted search for invariant axis (limit to angle ranges)
3. Logging
4. Saving (save only plots)

